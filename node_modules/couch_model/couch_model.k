module.exports = (dbConfig) -> {
   conn = require('./couch_connection')(dbConfig)
   
   db = conn.database dbConfig.name
   
   ; {
      err, exists = db.exists!
      if !exists
         db.create()
   }

   class CouchModel {
      @initialize = (config = {}) -> {
         if !config.name, return
         
         @db = config.db || db
         @name = config.name
         
         @document = @getDocument! @name, @db
         @populateModel()
      }

      @addItem = (name, value, _return) -> {
         {
            err, res = @document.save! name, value
            _return err, res
         }
         makeNewItemProperty.call @, name
      }
      
      @save = () -> {
         @db.save.apply @db, #
      }
      
      @merge = () -> {
         err, res = @db.merge! #0, #1
         @handleErr err
         @handleResponse res
      }

      @populateModel = -> {
         for prop, val from @document {
            makeNewItemProperty.call @, prop
         }
      }

      makeNewItemProperty = (propName) -> {
         @.__defineSetter__ propName, (value) -> {
            setter = {}
            @document[propName] = value
            setter[propName] = value
            
            err, res = @merge! @name, setter
            @handleErr err
         }
         
         @.__defineGetter__ propName, -> {
            @document[propName]
         }
      }
      
      @handleErr = (err) -> {
         throw err
      }
      
      @handleResponse = (res) -> {
         
      }

      @getDocument = (name, db, _return) -> {
         err, document = db.get! name
         if err, throw err
         _return.call @, document
      }
   }

   // This initializes DataModel's properties, including static ones.
   //new CouchModel()
   
   CouchModel
}